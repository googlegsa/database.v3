<?xml version="1.0" encoding="UTF-8"?>
<project name="db-connector" default="build" basedir=".">

  <!-- ========================= PROPERTIES ============================= -->
  <property file="${user.home}/google-enterprise-connector-db.properties" />
  <property file="google-enterprise-connector-db.properties" />
  <property file="version.properties" />

  <property name="COMPILE_DEBUG_FLAG" value="true" />
  <property name="COMPILE_DEBUG_LEVEL" value="source,lines,vars" />

  <property name="build.dir" value="build" />
  <property name="build-prod.dir" value="${build.dir}/prod" />
  <property name="build-prod-config.dir" value="${build-prod.dir}/config" />
  <property name="build-tests.dir" value="${build.dir}/tests" />

  <property name="zip.dir" value  = "${build.dir}/file" />
  <property name="config-zip.dir" value  = "${zip.dir}/Config" />
  <property name="lib-zip.dir" value  = "${zip.dir}/Lib" />
  <property name="license-zip.dir" value  = "${zip.dir}/License" />
  <property name="db-connector-jar-zip.file" value = "${zip.dir}/connector-db.jar" />
  <property name="db-connector-copying-zip.file" value="${zip.dir}/COPYING" />

  <property name="classes-prod.dir" value="${build-prod.dir}/classes" />
  <property name="classes-tests.dir" value="${build-tests.dir}/classes" />

  <property name="jar-prod.dir" value="${build-prod.dir}/jar" />
  <property name="jar-prod.file" value="${jar-prod.dir}/connector-db.jar" />

  <property name="downloads.dir" value="downloads" />

  <property name="javadoc.dir" value="javadoc" />
  <property name="javadoc-prod.dir" value="${javadoc.dir}/prod" />

  <property name="src-prod.dir" value="source/java" />
  <property name="src-tests.dir" value="source/javatests" />

  <property name="license-prod.dir" value="License" />

  <property name="config.dir" value="config" />
  <property name="logging-properties.file" value="${config.dir}/logging.properties" />
  <property name="thirdparty-prod-jar.dir" location="third_party/prod" />

  <property name="copying.file" value="COPYING" />
  <property name="readme.file" value="README" />
  <property name="release_notes.file" value="RELEASE_NOTES" />
  <property name="downloads.dir" value="downloads" />

  <property name="tests_out.dir" value="tests_outdir" />
  <property name="tests.logging.properties"
            location="${classes-tests.dir}/tests.logging.properties"/>

  <property name="connector-manager-projects.dir"
            location="${connector.manager.home}" />
  <property name="connector-manager.dir"
            location="${connector-manager-projects.dir}" />
  <property name="connector-manager-thirdparty-jar.dir"
    location="${connector-manager-projects.dir}/third-party" />
  <property name="connector-manager-thirdparty-prod-jar.dir"
    location="${connector-manager-thirdparty-jar.dir}/prod" />
  <property name="connector-manager-thirdparty-tests-jar.dir"
    location="${connector-manager-thirdparty-jar.dir}/tests" />
  <property name="spi.jar.dir" value="${connector-manager.dir}/dist/jarfile" />


  <!-- =========================== TASKS =============================== -->
  <target name="build" depends="init,compile_prod,run_tests,jar_prod">
  </target>

  <target name="init">
    <mkdir dir="${build.dir}" />
    <mkdir dir="${build-tests.dir}" />
    <mkdir dir="${build-prod.dir}" />
    <mkdir dir="${build-prod-config.dir}" />

    <mkdir dir="${zip.dir}" />
    <mkdir dir="${config-zip.dir}" />
    <mkdir dir="${lib-zip.dir}" />
    <mkdir dir="${license-zip.dir}" />

    <mkdir dir="${classes-prod.dir}" />
    <mkdir dir="${classes-tests.dir}" />

    <mkdir dir="${jar-prod.dir}" />

    <mkdir dir="${downloads.dir}" />

    <mkdir dir="${javadoc.dir}" />
    <mkdir dir="${javadoc-prod.dir}" />

    <mkdir dir="${tests_out.dir}" />
  </target>

  <target name="compile_prod" depends="init">
    <!-- compile java source files -->
    <javac srcdir="${src-prod.dir}" destdir="${classes-prod.dir}"
           debug="${COMPILE_DEBUG_FLAG}"
           debuglevel="${COMPILE_DEBUG_LEVEL}"
           target="1.5" source="1.5">
      <classpath>
        <fileset dir="${spi.jar.dir}" includes="**/*.jar" />
        <fileset dir="${thirdparty-prod-jar.dir}" includes="**/*.jar" />
      </classpath>
    </javac>
  </target>

  <target name="compile_tests" depends="init,jar_prod">
    <!-- compile java source files for tests -->
    <javac srcdir="${src-tests.dir}" destdir="${classes-tests.dir}"
           debug="${COMPILE_DEBUG_FLAG}"
           debuglevel="${COMPILE_DEBUG_LEVEL}"
           target="1.5" source="1.5">
      <classpath>
        <fileset dir="${connector-manager-thirdparty-prod-jar.dir}">
          <include name="**/spring.jar" />
        </fileset>
        <fileset dir="${connector-manager-thirdparty-tests-jar.dir}">
          <include name="**/junit.jar" />
        </fileset>
        <fileset dir="${spi.jar.dir}" includes="**/*.jar" />
        <fileset dir="${thirdparty-prod-jar.dir}" includes="**/*.jar" />
        <pathelement location="${jar-prod.file}" />
      </classpath>
    </javac>
  </target>

  <target name="run_tests" depends="compile_tests,jar_prod">
    <mkdir dir="${classes-tests.dir}/com/google/enterprise/connector/db/config"/>

    <copy todir="${classes-tests.dir}/com/google/enterprise/connector/db/config" >
      <fileset dir="${config.dir}"/>
    </copy>

    <junit printsummary="yes" haltonfailure="yes">
      <assertions><enable/></assertions>
      <classpath>
        <pathelement location="${classes-tests.dir}" />
        <fileset dir="${connector-manager-thirdparty-prod-jar.dir}">
          <include name="**/spring.jar" />
          <include name="**/commons-logging.jar" />
        </fileset>
        <fileset dir="${connector-manager-thirdparty-tests-jar.dir}">
          <include name="**/junit.jar" />
        </fileset>
        <fileset dir="${spi.jar.dir}" includes="**/*.jar" />
        <fileset dir="${thirdparty-prod-jar.dir}" includes="**/*.jar" />
        <pathelement location="${jar-prod.file}" />
      </classpath>
      <formatter type="brief" usefile="no"/>
      <formatter type="plain" />
      <batchtest fork="yes" todir="${tests_out.dir}">
        <fileset dir="${src-tests.dir}">
          <include name="**/*Test.java" />
        </fileset>
      </batchtest>
    </junit>
  </target>

  <target name="jar_prod" description="db-connector-jar"
          depends="compile_prod">
    <copy todir="${build-prod-config.dir}">
      <fileset dir="${config.dir}" />
    </copy>

    <tstamp />
    <jar jarfile="${jar-prod.file}">
      <fileset dir="source/java" includes="**/*.properties"/>
      <fileset dir="${classes-prod.dir}"/>
      <fileset dir="${build-prod.dir}" includes="config/**"/>
      <fileset dir="${build-prod.dir}" includes="*.properties"/>
      <manifest>
        <attribute name="Implementation-Title" value="Database Connector"/>
        <attribute name="Implementation-Version" value="${version} ${TODAY}"/>
        <attribute name="Implementation-Vendor" value="Google Inc."/>
        <attribute name="Specification-Title" value="Connector Manager SPI"/>
        <attribute name="Specification-Version" value="${version.spi}"/>
        <attribute name="Specification-Vendor" value="Google Inc."/>
      </manifest>
    </jar>
  </target>

  <target name="javadoc_prod" depends="compile_prod" description="Create component Javadoc documentation">
      <javadoc sourcepath   ="${src-prod.dir}"
               destdir      ="${javadoc.dir}"
               packagenames ="com.google.enterprise.connector.db"
               author       ="false"
               private      ="true"
               version      ="true"
               doctitle     ="&lt;h2&gt;${product}&lt;/h2&gt;"
               windowtitle  ="${product} (Version ${version})"
               bottom       ="Copyright 2009 Google Inc." >
      <classpath>
        <fileset dir="${spi.jar.dir}" includes="**/*.jar" />
        <fileset dir="${thirdparty-prod-jar.dir}" includes="**/*.jar" />
      </classpath>
    </javadoc>
  </target>

  <target name="download_db_connector" depends="jar_prod" >
    <property name="connector-db-src.zip" value="${downloads.dir}/connector-db-${version}-src.zip" />
    <zip destfile="${connector-db-src.zip}" >
      <zipfileset dir="." prefix="connector-db-${version}/projects/database-connector"
        includes="${readme.file}, ${copying.file}, ${release_notes.file}, Build_ReadMe.txt, build.xml, config/**/*, third_party/**/*, License/**/*, source/**/*" />
    </zip>


    <checksum file="${connector-db-src.zip}" />

    <copy file="${jar-prod.file}" tofile="${db-connector-jar-zip.file}"/>
    <copy file="${copying.file}" tofile="${db-connector-copying-zip.file}"/>
    <copy file="${logging-properties.file}" todir="${config-zip.dir}" />

    <copy todir="${lib-zip.dir}">
      <fileset dir="${thirdparty-prod-jar.dir}" includes="**/*.jar" />
    </copy>
    <copy todir="${license-zip.dir}">
      <fileset dir="${license-prod.dir}" />
    </copy>

    <zip destfile="${downloads.dir}/connector-db-${version}.zip">
      <zipfileset dir="${zip.dir}" />
    </zip>

  </target>

  <target name="clean" description="Deletes all build files.">
    <delete dir="${build.dir}" />
    <delete dir="${downloads.dir}" />
    <delete dir="${javadoc.dir}" />
    <delete dir="${tests_out.dir}" />
  </target>
</project>
